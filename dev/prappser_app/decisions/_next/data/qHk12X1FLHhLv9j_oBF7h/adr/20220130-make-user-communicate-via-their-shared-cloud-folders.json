{"pageProps":{"projectName":"prappser_app","currentAdr":{"slug":"20220130-make-user-communicate-via-their-shared-cloud-folders","package":null,"title":"Make user communicate via their shared cloud folders","status":"superseded","supersededBy":{"slug":"20220212-separate-app-state-management-layer-from-communication-layer","package":null,"title":"Separate app state management layer from communication layer","status":"accepted","creationDate":"2022-02-15T19:46:12.000Z","publicationDate":"2022-02-12T22:59:59.000Z"},"tags":["apps","core"],"deciders":["Crisperit"],"body":{"enhancedMdx":"\n## Context and Problem Statement\n\nThe most important part of the Prappser is the user communication. Users will send through the internet app state changes, app join requests etc. in a form of JSON events.  We do not want to be able to track our users in any way. We also want to be able to scale to million of users without being impacted by big costs. We want to totally free way of communication because we do not want to make the Prappser paid solution - but OpenSource. Is that even possible? \n## Decision Drivers\n\n- Totally free\n- Secure\n- Scalable to infinite numbers\n- Untraceable us in any way\n\n## Considered Options\n\n- Public MQTT servers\n- Shared Cloud folders\n- Localhost connection + dynamic Hamachi room creation\n\n## Decision Outcome\n\nChosen option: \"Shared Cloud folders\", because it is most scalable and available to any user solution. It is also pretty secure and it allows users to be in a total control over their data (even send one data). We also want to add the possibility in a future for things like backups or user devices sync.\n\n### Positive Consequences\n\n- We can scale to the near infinite numbers without paying a $\n- Total control over data in the hand of users\n- We can integrate with a lot of Cloud Services\n\n### Negative Consequences\n\n- We have to ensure that shared folders links do not expire\n- Such kind of communication might be slow so we have to put a lot of effort to simplify communication protocol\n\n## Pros and Cons of the Options\n\n### Public MQTT servers\n\nMQTT protocol is perfect for the case of that application. It is message broker optimized for IoT. It allows to create infinite amount of topics.\nThere are a few of hosted brokers available for free. \n\n- Good, because MQTT protocol is fitted for our case\n- Bad, because MQTT public servers are limited\n- Bad, because we cannot be so sure if they will be enabled all the time\n- Bad, because they scale poorly (the instance hosted in one region and nothing more)\n- Bad, because we cannot send big files\n\n### Shared Cloud folders\n\nEach user nowadays have some kind of Cloud Storage account (Google Drive/Dropbox/Mega/OneDrive...). And rather all of these solutions allows to share the folders by publicly available link.\nOne user can then connect with other user by creating a shared folder. If two users will create a shared folder for themselves then there is possible a file based communication. Each shared folder can contain subfolders which can be used like topics in message brokers.\n\n- Good, because scalable. Every Cloud Storage service like Google Drive/Dropbox has their servers scattered over the world\n- Good, because totally free\n- Good, because users can remove whole folder with all data that Prappser have\n- Good, because the data is stored on users accounts which are secured by Cloud Storage services\n- Good, because we cannot track our users\n- Bad, because such a shared cloud folders mutual listening communication might be slow\n\n### Localhost connection + dynamic Hamachi room creation\n\nWe can add the possibility to allow users to connect only to the users in the same net. In case of desire to connect with someone outside of the local net then we can provide some kind of integration with [Hamachi](https://www.vpn.net/) service.\n\n- Good, the communication protocol will be simple\n- Good, because we can send big files\n- Bad, because we require users to create Hamachi account if they want to connect with each other"},"creationDate":"2022-01-29T10:58:26.000Z","lastEditDate":"2022-02-15T19:46:12.000Z","lastEditAuthor":"Krzysztof Perchlicki","publicationDate":"2022-01-30T22:59:59.000Z","file":{"relativePath":"doc/decision/20220130-make-user-communicate-via-their-shared-cloud-folders.md","absolutePath":"/home/runner/work/prappser_app/prappser_app/doc/decision/20220130-make-user-communicate-via-their-shared-cloud-folders.md"},"repository":{"provider":"github","viewUrl":"https://github.com/crisperit/prappser_app/blob/master/doc/decision/20220130-make-user-communicate-via-their-shared-cloud-folders.md"}},"l4bVersion":"1.0.0-beta.11"},"__N_SSG":true}