{"pageProps":{"projectName":"prappser_app","currentAdr":{"slug":"20220129-use-event-sourcing-technique-to-store-the-state-of-the-application","package":null,"title":"Use Event Sourcing technique to store the state of the application","status":"accepted","supersededBy":null,"tags":["apps","core","data"],"deciders":["Crisperit"],"body":{"enhancedMdx":"\n## Context and Problem Statement\n\nWe have to be able to send app state change in a form of events. It would be nice also to give app creator the view into the history & audit of app changes. In the same time the app guests should not contain such a history. How to achieve that?\n\n## Decision Drivers\n\n- Well know architectural pattern\n- Flexible to use\n\n\n## Considered Options\n\n- Event Sourcing\n\n## Decision Outcome\n\nChosen option: \"Event Sourcing\", because in deciders current knowledge there is no better option for this requirement. The app creator will be able to keep track of all events in the form of proposed by Event Sourcing pattern. The app creator will be able to audit the app, send the app changes since specified timestamp or even revert app to the specified point in time. The app guest will only get a snapshot of the current app without any more knowledge."},"creationDate":"2022-01-29T10:58:26.000Z","lastEditDate":"2022-01-29T10:58:26.000Z","lastEditAuthor":"Crisperit","publicationDate":"2021-01-29T22:59:59.000Z","file":{"relativePath":"doc/decision/20220129-use-event-sourcing-technique-to-store-the-state-of-the-application.md","absolutePath":"/home/runner/work/prappser_app/prappser_app/doc/decision/20220129-use-event-sourcing-technique-to-store-the-state-of-the-application.md"},"repository":{"provider":"github","viewUrl":"https://github.com/crisperit/prappser_app/blob/master/doc/decision/20220129-use-event-sourcing-technique-to-store-the-state-of-the-application.md"}},"l4bVersion":"1.0.0-beta.11"},"__N_SSG":true}