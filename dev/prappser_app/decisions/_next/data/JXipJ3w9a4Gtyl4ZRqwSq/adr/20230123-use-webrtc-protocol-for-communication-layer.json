{"pageProps":{"projectName":"prappser_app","currentAdr":{"slug":"20230123-use-webrtc-protocol-for-communication-layer","package":null,"title":"Use WebRTC protocol for communication layer","status":"accepted","supersededBy":null,"tags":["apps","communication"],"deciders":["Crisperit"],"body":{"enhancedMdx":"\n## Context and Problem Statement\n\nUsers needs to communicate with each other to exchange application state changes only between themselves. We have to keep in mind scalability, cost and privacy of searched solution.\n\n## Decision Drivers\n\n- Price, cheaper = better\n- Scalable\n- Low latency\n- Utilizes user CPU not our server CPU\n- Easy to use for non technical person\n\n## Considered Options\n\n- <AdrLink slug=\"20220130-make-user-communicate-via-their-shared-cloud-folders\" status=\"superseded\" title=\"Make user communicate via their shared cloud folders\" customLabel=\"Communication via shared cloud folders\" />\n- Server & client\n- MQTT\n- WebRTC\n\n## Decision Outcome\n\nChosen option: \"WebRTC\", because its nature is P2P if needed. It is performant and there are some free TURN servers hosted on the internet. In case of disabling these solutions we can always host our TURN server and make it available after monthly subscription for e.g.\nIt is scalable in terms of total amount of users that uses the Prappser. Around 20% of connection might require TURN server for relay'ing.\n\n## Pros and Cons of the Options <!-- optional -->\n\n### Communication via shared cloud folders\n\nAs it was described in <AdrLink slug=\"20220130-make-user-communicate-via-their-shared-cloud-folders\" status=\"superseded\" title=\"Make user communicate via their shared cloud folders\" customLabel=\"Communication via shared cloud folders\" /> that option uses the files created in shared cloud folders for communication between users.\n\n- Good, because totally free\n- Good, because scalable\n- Bad, because not performant at all - there's cloud provider in the middle.\n- Bad, because of pull strategy for getting user changes\n\n### Server & client\n\nApplication could be hosted as a server\n\n- Good, because it might work fast\n- Good, because it is scalable\n- Bad, because it requires server setup and probably not something easy for commons. Big cost of creating new apps.\n- Bad, because it limits the participants architecture to client & server\n\n### MQTT\n\nBroker protocol used a lot in IOT. It has unlimited topic count and limited payload.\n\n- Good, because it is fast\n- Bad, because payloads are limited\n- Bad, because we have to host it\n- Bad, because it is not P2P\n\n### WebRTC\nProtocol which aims to connect multiple of hosts via P2P direct connection and uses server only in case when direct P2P connection cannot be established. It happens really often for 3G/4G/5G mobile networks. There is available for free https://www.metered.ca/tools/openrelay/ which has been used in https://github.com/jeremyckahn/chitchatter for e.g.\n\n- Good, because P2P\n- Good, because fast and supports video & audio calls\n- Good, because in most cases servers are not needed\n- Good, because there's a free TURN server and we can always think about adding some premium plan TURN server hosted by us\n- Bad, because it might be complicated to connect a lot of users"},"creationDate":"2023-01-26T09:40:33.000Z","lastEditDate":"2023-01-26T09:40:33.000Z","lastEditAuthor":"Crisperit","publicationDate":null,"file":{"relativePath":"doc/decision/20230123-use-webrtc-protocol-for-communication-layer.md","absolutePath":"/home/runner/work/prappser_app/prappser_app/doc/decision/20230123-use-webrtc-protocol-for-communication-layer.md"},"repository":{"provider":"github","viewUrl":"https://github.com/crisperit/prappser_app/blob/master/doc/decision/20230123-use-webrtc-protocol-for-communication-layer.md"}},"l4bVersion":"1.0.1"},"__N_SSG":true}